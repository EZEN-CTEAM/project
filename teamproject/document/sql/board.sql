SET SESSION FOREIGN_KEY_CHECKS=0;

/* Drop Tables */

DROP TABLE IF EXISTS APPLICANT;
DROP TABLE IF EXISTS CATTACH;
DROP TABLE IF EXISTS CCLIKE;
DROP TABLE IF EXISTS CCOMMENT;
DROP TABLE IF EXISTS CCOMPLAINT;
DROP TABLE IF EXISTS CLIKE;
DROP TABLE IF EXISTS COMMUNITY;
DROP TABLE IF EXISTS JOB_POSTING;
DROP TABLE IF EXISTS RCOMPLAINT;
DROP TABLE IF EXISTS RVLIKE;
DROP TABLE IF EXISTS REVIEW;
DROP TABLE IF EXISTS FCOMMENT;
DROP TABLE IF EXISTS FCOMPLAINT;
DROP TABLE IF EXISTS FLIKE;
DROP TABLE IF EXISTS FATTACH;
DROP TABLE IF EXISTS FREE_BOARD;
DROP TABLE IF EXISTS RESUME;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS COMPANY;




/* Create Tables */

-- 지원자관리
CREATE TABLE APPLICANT
(
	apno int NOT NULL AUTO_INCREMENT COMMENT '지원자 번호',
	-- W
	-- E
	-- D
	astate char DEFAULT 'W' COMMENT '합격여부 : W
E
D',
	uno int NOT NULL COMMENT '회원번호',
	rsno int NOT NULL COMMENT '이력서번호',
	jno int NOT NULL COMMENT '채용공고번호',
	PRIMARY KEY (apno)
) COMMENT = '지원자관리';


-- 사게첨부파일
CREATE TABLE CATTACH
(
	cano int NOT NULL AUTO_INCREMENT COMMENT '첨부번호',
	cpname varchar(250) COMMENT '물리파일명',
	cfname varchar(250) COMMENT '논리파일명',
	cmno int NOT NULL COMMENT '커뮤니티 번호',
	PRIMARY KEY (cano)
) COMMENT = '사게첨부파일';


-- 사게좋아요
CREATE TABLE CCLIKE
(
	cclno int NOT NULL AUTO_INCREMENT COMMENT '번호',
	cclrdate timestamp DEFAULT now() NOT NULL COMMENT '등록일',
	-- E
	-- D
	cclstate char DEFAULT 'D' COMMENT '상태 : E
D',
	uno int NOT NULL COMMENT '회원번호',
	cmno int NOT NULL COMMENT '커뮤니티 번호',
	PRIMARY KEY (cclno)
) COMMENT = '사게좋아요';


-- 사게댓글정보
CREATE TABLE CCOMMENT
(
	ccno int NOT NULL AUTO_INCREMENT COMMENT '댓글번호',
	cccontent text NOT NULL COMMENT '댓글내용',
	ccrdate datetime NOT NULL COMMENT '작성일자',
	uno int NOT NULL COMMENT '회원번호',
	cmno int NOT NULL COMMENT '커뮤니티 번호',
	PRIMARY KEY (ccno)
) COMMENT = '사게댓글정보';


-- 사게신고
CREATE TABLE CCOMPLAINT
(
	ccpno int NOT NULL AUTO_INCREMENT COMMENT '번호',
	ccprdate timestamp DEFAULT now() COMMENT '등록일',
	-- E
	-- D
	ccpstate char DEFAULT 'D' COMMENT '상태 : E
D',
	cmno int NOT NULL COMMENT '커뮤니티 번호',
	uno int NOT NULL COMMENT '회원번호',
	PRIMARY KEY (ccpno)
) COMMENT = '사게신고';


-- 기업좋아요
CREATE TABLE CLIKE
(
	clno int NOT NULL AUTO_INCREMENT COMMENT '번호',
	clrdate timestamp DEFAULT now() COMMENT '등록일',
	-- E
	-- D
	-- H
	clstate char DEFAULT 'D' NOT NULL COMMENT '상태 : E
D
H',
	uno int NOT NULL COMMENT '회원번호',
	cno int NOT NULL COMMENT '회사번호',
	PRIMARY KEY (clno)
) COMMENT = '기업좋아요';


-- 사내 커뮤니티
CREATE TABLE COMMUNITY
(
	cmno int NOT NULL AUTO_INCREMENT COMMENT '커뮤니티 번호',
	cmtitle varchar(250) COMMENT '제목',
	cmcontent text COMMENT '내용',
	cmrdate datetime COMMENT '작성일자',
	cmhit int COMMENT '조회수',
	uno int NOT NULL COMMENT '회원번호',
	cno int NOT NULL COMMENT '회사번호',
	PRIMARY KEY (cmno)
) COMMENT = '사내 커뮤니티';


-- 회사
CREATE TABLE COMPANY
(
	cno int NOT NULL AUTO_INCREMENT COMMENT '회사번호',
	cid varchar(50) NOT NULL COMMENT '아이디',
	cnickname varchar(50) NOT NULL COMMENT '닉네임',
	cpw varchar(50) NOT NULL COMMENT '비밀번호',
	clogo varchar(50) NOT NULL COMMENT '회사로고',
	cname varchar(50) NOT NULL COMMENT '회사명',
	clocation varchar(50) NOT NULL COMMENT '위치',
	cemployee int NOT NULL COMMENT '직원수',
	cindustry varchar(50) NOT NULL COMMENT '기업업종',
	canniversary varchar(50) NOT NULL COMMENT '설립일자',
	crdate timestamp DEFAULT now() NOT NULL COMMENT '가입일자',
	cbrcnum varchar(50) NOT NULL COMMENT '사업자등록번호',
	cbrc varchar(50) NOT NULL COMMENT '사업자등록증',
	-- E
	-- D
	-- W
	cstate char DEFAULT 'W' NOT NULL COMMENT '상태 : E
D
W',
	PRIMARY KEY (cno)
) COMMENT = '회사';


-- 자게첨부파일
CREATE TABLE FATTACH
(
	fano int NOT NULL AUTO_INCREMENT COMMENT '첨부번호',
	fno int NOT NULL COMMENT '게시물번호',
	fpname varchar(250) COMMENT '물리파일명',
	ffname varchar(250) COMMENT '논리파일명',
	PRIMARY KEY (fano)
) COMMENT = '자게첨부파일';


-- 자게댓글정보
CREATE TABLE FCOMMENT
(
	fcno int NOT NULL AUTO_INCREMENT COMMENT '댓글번호',
	fccontent text NOT NULL COMMENT '댓글내용',
	fcrdate timestamp DEFAULT now() NOT NULL COMMENT '작성일자',
	fno int NOT NULL COMMENT '게시물번호',
	uno int NOT NULL COMMENT '회원번호',
	PRIMARY KEY (fcno)
) COMMENT = '자게댓글정보';


-- 자게신고
CREATE TABLE FCOMPLAINT
(
	fcpno int NOT NULL AUTO_INCREMENT COMMENT '번호',
	fcprdate timestamp DEFAULT now() COMMENT '등록일',
	-- E
	-- D
	fcpstate char DEFAULT 'D' NOT NULL COMMENT '상태 : E
D',
	uno int NOT NULL COMMENT '회원번호',
	fno int NOT NULL COMMENT '게시물번호',
	PRIMARY KEY (fcpno)
) COMMENT = '자게신고';


-- 자게좋아요
CREATE TABLE FLIKE
(
	flno int NOT NULL AUTO_INCREMENT COMMENT '번호',
	flrdate timestamp DEFAULT now() COMMENT '등록일',
	-- E
	-- D
	flstate char DEFAULT 'D' NOT NULL COMMENT '상태 : E
D',
	uno int NOT NULL COMMENT '회원번호',
	fno int NOT NULL COMMENT '게시물번호',
	PRIMARY KEY (flno)
) COMMENT = '자게좋아요';


-- 자유게시물
CREATE TABLE FREE_BOARD
(
	fno int NOT NULL AUTO_INCREMENT COMMENT '게시물번호',
	ftitle varchar(250) COMMENT '제목',
	fcontent text COMMENT '내용',
	frdate datetime COMMENT '작성일자',
	fhit int COMMENT '조회수',
	uno int NOT NULL COMMENT '회원번호',
	PRIMARY KEY (fno)
) COMMENT = '자유게시물';


-- 채용공고등록
CREATE TABLE JOB_POSTING
(
	jno int NOT NULL AUTO_INCREMENT COMMENT '채용공고번호',
	jtitle varchar(100) COMMENT '채용공고명',
	jkind varchar(2) COMMENT '채용유형',
	jperiod varchar(50) COMMENT '마감일',
	jnote text COMMENT '직무내용',
	jrdate timestamp DEFAULT now() COMMENT '등록일',
	cno int NOT NULL COMMENT '회사번호',
	PRIMARY KEY (jno)
) COMMENT = '채용공고등록';


-- 리뷰신고
CREATE TABLE RCOMPLAINT
(
	rcpno int NOT NULL AUTO_INCREMENT COMMENT '번호',
	rcptdate timestamp DEFAULT now() COMMENT '등록일',
	-- E
	-- D
	rcpstate char DEFAULT 'D' NOT NULL COMMENT '상태 : E
D',
	uno int NOT NULL COMMENT '회원번호',
	rvno int NOT NULL COMMENT '리뷰번호',
	PRIMARY KEY (rcpno)
) COMMENT = '리뷰신고';


-- 이력서
CREATE TABLE RESUME
(
	rsno int NOT NULL AUTO_INCREMENT COMMENT '이력서번호',
	rsschoolname varchar(50) COMMENT '학교명',
	rsmajor varchar(50) COMMENT '전공명',
	rsgraduation datetime COMMENT '졸업일자',
	rscompanyname varchar(50) COMMENT '경력회사명',
	rstenure1 varchar(20) COMMENT '재직기간1',
	rstenure2 varchar(20) COMMENT '재직기간2',
	rsposition varchar(50) COMMENT '직급',
	rsarea varchar(50) COMMENT '희망지역',
	rsjob varchar(50) COMMENT '희망 직무',
	rssalary varchar(50) COMMENT '희망연봉',
	rsinfo text COMMENT '자기소개서',
	uno int NOT NULL COMMENT '회원번호',
	PRIMARY KEY (rsno)
) COMMENT = '이력서';


-- 기업리뷰
CREATE TABLE REVIEW
(
	rvno int NOT NULL AUTO_INCREMENT COMMENT '리뷰번호',
	rvstarrating int COMMENT '별점',
	rvtitle varchar(250) COMMENT '제목',
	rvgood text COMMENT '장점',
	rvbad text COMMENT '단점',
	rv1 int COMMENT '커리어향상',
	rv2 int COMMENT '균형',
	rv3 int COMMENT '급여복지',
	rv4 int COMMENT '사내문화',
	rv5 int COMMENT '경영진',
	uno int NOT NULL COMMENT '회원번호',
	cno int NOT NULL COMMENT '회사번호',
	PRIMARY KEY (rvno)
) COMMENT = '기업리뷰';


-- 리뷰좋아요
CREATE TABLE RVLIKE
(
	rno int NOT NULL AUTO_INCREMENT COMMENT '번호',
	rrdate timestamp DEFAULT now() COMMENT '등록일',
	-- E
	-- D
	rstate char DEFAULT 'D' NOT NULL COMMENT '상태 : E
D',
	uno int NOT NULL COMMENT '회원번호',
	rvno int NOT NULL COMMENT '리뷰번호',
	PRIMARY KEY (rno)
) COMMENT = '리뷰좋아요';


-- 회원
CREATE TABLE USER
(
	uno int NOT NULL AUTO_INCREMENT COMMENT '회원번호',
	uid varchar(50) NOT NULL COMMENT '아이디',
	upw varchar(100) NOT NULL COMMENT '비밀번호',
	unickname varchar(20) NOT NULL COMMENT '닉네임',
	uemployment varchar(10) NOT NULL COMMENT '재직유무',
	ucompanyi varchar(20) COMMENT '회사명입력',
	ucompanys varchar(20) COMMENT '회사명선택',
	urdate timestamp DEFAULT now() NOT NULL COMMENT '가입일자',
	ukind char DEFAULT 'P' NOT NULL COMMENT '회원구분',
	-- E-활성화
	-- D-비활성화
	-- W-대기
	-- 
	ustate char DEFAULT 'E' NOT NULL COMMENT '상태 : E-활성화
D-비활성화
W-대기
',
	cno int COMMENT '회사번호',
	PRIMARY KEY (uno)
) COMMENT = '회원';



/* Create Foreign Keys */

ALTER TABLE CATTACH
	ADD FOREIGN KEY (cmno)
	REFERENCES COMMUNITY (cmno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CCLIKE
	ADD FOREIGN KEY (cmno)
	REFERENCES COMMUNITY (cmno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CCOMMENT
	ADD FOREIGN KEY (cmno)
	REFERENCES COMMUNITY (cmno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CCOMPLAINT
	ADD FOREIGN KEY (cmno)
	REFERENCES COMMUNITY (cmno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CLIKE
	ADD FOREIGN KEY (cno)
	REFERENCES COMPANY (cno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMUNITY
	ADD FOREIGN KEY (cno)
	REFERENCES COMPANY (cno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE JOB_POSTING
	ADD FOREIGN KEY (cno)
	REFERENCES COMPANY (cno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REVIEW
	ADD FOREIGN KEY (cno)
	REFERENCES COMPANY (cno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE USER
	ADD FOREIGN KEY (cno)
	REFERENCES COMPANY (cno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FATTACH
	ADD FOREIGN KEY (fno)
	REFERENCES FREE_BOARD (fno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FCOMMENT
	ADD FOREIGN KEY (fno)
	REFERENCES FREE_BOARD (fno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FCOMPLAINT
	ADD FOREIGN KEY (fno)
	REFERENCES FREE_BOARD (fno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FLIKE
	ADD FOREIGN KEY (fno)
	REFERENCES FREE_BOARD (fno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE APPLICANT
	ADD FOREIGN KEY (jno)
	REFERENCES JOB_POSTING (jno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE APPLICANT
	ADD FOREIGN KEY (rsno)
	REFERENCES RESUME (rsno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE RCOMPLAINT
	ADD FOREIGN KEY (rvno)
	REFERENCES REVIEW (rvno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE RVLIKE
	ADD FOREIGN KEY (rvno)
	REFERENCES REVIEW (rvno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE APPLICANT
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CCLIKE
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CCOMMENT
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CCOMPLAINT
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE CLIKE
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE COMMUNITY
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FCOMMENT
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FCOMPLAINT
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FLIKE
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE FREE_BOARD
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE RCOMPLAINT
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE RESUME
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE REVIEW
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;


ALTER TABLE RVLIKE
	ADD FOREIGN KEY (uno)
	REFERENCES USER (uno)
	ON UPDATE RESTRICT
	ON DELETE RESTRICT
;



